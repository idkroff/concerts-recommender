import logging
from yandex_music import Client
from yandex_music.exceptions import NotFoundError
from typing import Set
from json import loads


logger = logging.getLogger(__name__)


class ArtistsGetter:
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –º–æ–¥—É–ª—è
    """
    def __init__(self, token) -> None:
        """
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞: –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞ API —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω
        """
        self.client: Client = Client(token)
        self.client.init()

    def get_chart(self) -> None:
        """
        –ú–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –≤—ã–≤–æ–¥–∞ –º–∏—Ä–æ–≤–æ–π —á–∞—Ä—Ç 
        """
        chart = self.client.chart("world").chart
        text = [f'üèÜ {chart.title}', chart.description, '', '–¢—Ä–µ–∫–∏:']

        for track_short in chart.tracks:
            track, chart = track_short.track, track_short.chart
            artists = ''
            if track.artists:
                artists = ' - ' + ', '.join(artist.name for artist in track.artists)

            track_text = f'{track.title}{artists}'

            if chart.progress == 'down':
                track_text = 'üîª ' + track_text
            elif chart.progress == 'up':
                track_text = 'üî∫ ' + track_text
            elif chart.progress == 'new':
                track_text = 'üÜï ' + track_text
            elif chart.position == 1:
                track_text = 'üëë ' + track_text

            track_text = f'{chart.position} {track_text}'
            text.append(track_text)

        print('\n'.join(text))

    def get_artists_from_playlist_by_url(self, playlist_url: str) -> list | str:
        """
        –ú–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç –∏ –ø–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
        """
        #  https://music.yandex.ru/users/fnikulenko/playlists/1006
        parsed_url = playlist_url.split("/")
        playlist_id = parsed_url[-1]
        user_id = parsed_url[-3]

        found_artists: Set[str] = set()
        
        try:
            response = self.client.users_playlists(kind=playlist_id, user_id=user_id)
            for track in response.fetch_tracks():
                for artist in track.track.artists:
                    found_artists.add(artist.name)

            return list(found_artists)
        except NotFoundError as e:
            return f"–¢—Ä–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {playlist_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—É–±–ª–∏—á–Ω—ã–º"




